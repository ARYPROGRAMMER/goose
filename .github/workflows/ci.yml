on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  merge_group:
    branches:
      - main
  workflow_dispatch:

name: CI

jobs:
  rust-format:
    name: Check Rust Code Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4

      - name: Run cargo fmt
        run: source ./bin/activate-hermit && cargo fmt --check

  rust-build-and-test:
    name: Build and Test Rust Project
    runs-on: goose
    strategy:
      matrix:
        package:
          - goose
          - goose-bench
          - goose-cli
          - goose-ffi
          - goose-llm
          - goose-mcp
          - goose-server
          - mcp-client
          - mcp-core
          - mcp-macros
          - mcp-server
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4

      - name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y libdbus-1-dev gnome-keyring libxcb1-dev

      - name: Cache Cargo Registry
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # pin@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles(format('{0}/Cargo.lock', matrix.package)) }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Index
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # pin@v3
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index
          restore-keys: |
            ${{ runner.os }}-cargo-index

      - name: Cache Cargo Build
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # pin@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles(format('{0}/Cargo.lock', matrix.package)) }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build and Test
        run: |
          gnome-keyring-daemon --components=secrets --daemonize --unlock <<< 'foobar'
          source ../bin/activate-hermit
          export CARGO_INCREMENTAL=0
          cargo test -p ${{ matrix.package }} --jobs 2
        working-directory: crates

      - name: Lint
        run: |
          source ./bin/activate-hermit
          export CARGO_INCREMENTAL=0
          cargo clippy -p ${{ matrix.package }} --jobs 2 -- -D warnings

  desktop-lint:
    name: Lint Electron Desktop App
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4

      - name: Install Dependencies
        run: source ../../bin/activate-hermit && npm ci
        working-directory: ui/desktop

      - name: Run Lint
        run: source ../../bin/activate-hermit && npm run lint:check
        working-directory: ui/desktop

  # Faster Desktop App build for PRs only
  bundle-desktop-unsigned:
    uses: ./.github/workflows/bundle-desktop.yml
    if: github.event_name == 'pull_request' || github.event_name == 'merge_group'
    with:
      signing: false
