"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[719],{180:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});var n=o(30351),r=o(74848),i=o(28453);const a={title:"How to Make Any MCP Server MCP-UI Compatible",description:"How an engineering team is trialling autonomous AI-powered technical debt cleanup",authors:["ebony"]},s=void 0,c={authorsImageUrls:[void 0]},l=[];function p(e){const t={a:"a",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://mcpui.dev/guide/introduction",children:"MCP-UI"})," isn\u2019t fully rolled out yet, but to me that\u2019s what makes it so fun to play with. We\u2019re at this point where the spec is still taking shape, clients are only partially supporting it, and yet\u2026 you can already do a lot."]}),"\n",(0,r.jsxs)(t.p,{children:["I wanted to see how far I could push it. So I grabbed two open source MCP servers, ",(0,r.jsx)(t.a,{href:"https://github.com/felores/cloudinary-mcp-server",children:"Cloudinary"})," and ",(0,r.jsx)(t.a,{href:"https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",children:"Filesystem"}),", and gave them a UI. Instead of boring text, I now get rich, interactive interfaces right inside goose."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>s});var n=o(96540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},30351:e=>{e.exports=JSON.parse('{"permalink":"/goose/pr-preview/pr-4578/blog/2025/09/08/turn-any-mcp-server-mcp-ui-compatible","source":"@site/blog/2025-09-08-turn-any-mcp-server-mcp-ui-compatible/index.mdx","title":"How to Make Any MCP Server MCP-UI Compatible","description":"How an engineering team is trialling autonomous AI-powered technical debt cleanup","date":"2025-09-08T00:00:00.000Z","tags":[],"readingTime":5.735,"hasTruncateMarker":true,"authors":[{"name":"Ebony Louis","title":"Developer Advocate","page":{"permalink":"/goose/pr-preview/pr-4578/blog/authors/ebony"},"socials":{"linkedin":"https://www.linkedin.com/in/ebonylouis/","x":"https://x.com/ebonyjlouis","github":"https://github.com/ebonylouis"},"imageURL":"https://avatars.githubusercontent.com/u/55366651?v=4","key":"ebony"}],"frontMatter":{"title":"How to Make Any MCP Server MCP-UI Compatible","description":"How an engineering team is trialling autonomous AI-powered technical debt cleanup","authors":["ebony"]},"unlisted":false,"nextItem":{"title":"When AI Becomes Your New Team Member: The Story of Goose Janitor","permalink":"/goose/pr-preview/pr-4578/blog/2025/08/28/ai-teammate"}}')}}]);